{
  "home": {
    "heading": "Home",
    "paragraphs": [
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed metus felis, volutpat at facilisis vel, tempor et arcu. Proin vitae fringilla massa. In pulvinar venenatis nulla sit amet dictum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In hac habitasse platea dictumst. Aliquam eget turpis sed ante pulvinar hendrerit. Pellentesque non turpis in tellus imperdiet eleifend tempor et est. Nam nec orci non felis interdum malesuada ac at est. Morbi elementum est blandit, luctus turpis non, facilisis erat. Praesent auctor, neque eu efficitur luctus, nulla ante placerat metus, ac dapibus eros risus vel dolor. Nam vel neque placerat, sollicitudin erat nec, pellentesque quam.",
      "This string contains {count} replaced {variable|count|variables}!",
      "Donec vitae sodales ligula. Nam maximus, sapien quis pretium facilisis, magna mi elementum ex, fermentum fringilla leo turpis vitae magna. Cras sagittis nisl nisl, quis ornare odio ultricies vel. Praesent in feugiat augue. Mauris aliquet nisl non tellus convallis volutpat. Phasellus pulvinar dolor in auctor semper. Aenean sed euismod turpis. Aliquam at neque ut dolor dapibus porta. Ut elementum dapibus mauris, a pellentesque sem accumsan vel. Phasellus sed rutrum lorem, sed viverra lorem. Nullam eget odio euismod, sodales velit nec, accumsan nisl. Curabitur lobortis lorem orci, nec tincidunt nisl tincidunt vel. Nunc facilisis lorem vel odio auctor, ultricies commodo felis suscipit. Curabitur et condimentum lectus, sed scelerisque metus. Donec convallis, mauris in cursus dignissim, metus sem tristique ipsum, non maximus nibh ligula non dolor. Mauris id nisl id dui pretium placerat."
    ]
  },
  "translations": {
    "introduction": {
      "heading": "Translations",
      "paragraphs": [
        "Rendering a translation can be done with LocalizedText component that will output the string from the translation file. The LocalizedText component allows for 3 different props: id, formatters and render. The id is used to find the right key in the translation file. The formatters array is used to modify the translated string after it's fetched from the translation file. The render prop is a callback method that can be used to do some custom rendering of the translation file, for example when you want to get an array of string from the translation file and loop through them to render out different paragraphs."
      ]
    },
    "formatters": {
      "heading": "Formatters",
      "paragraphs": [
        "Formatter can be used to modify a localizedText, sometimes you want to replace some variables within a string or do some other manipulation to it. This can be done by adding a prop that includes methods that will modify the original translation. You can apply multiple formatters to the same translation and they will be applied on top of each other. The skeleton only contains 2 formatters but you an easily add Lodash string methods to the formatters array to modify it!",
        "See below for the included examples:"
      ],
      "example": {
        "replacement": {
          "heading": "ReplaceFormatter",
          "description": "This formatter replaces variables within a string.",
          "text": "The quick brown {animal} jumps over the lazy dog"
        },
        "plural": {
          "heading": "PuralFormatter",
          "description":
            "This formatter chooses the right plural version of a translation based on a number.",
          "text": "The quick brown {fox|count|foxes} jumps over the lazy dog"
        }
      }
    }
  }
}
